{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Header","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","AuthStore","useStores","history","useHistory","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"qgBAOA,IAAMA,EAAUC,IAAOC,IAAV,KAQPC,EAASF,IAAOG,GAAV,KAKNC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,GACRH,KAAM,KA6GKI,UAzGG,WAAO,IAChBC,EAAaC,cAAbD,UACDE,EAAUC,cA8BhB,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,iCACA,kBAAC,IAAD,iBACME,EADN,CAEEW,KAAK,QAELC,SApCW,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBN,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WAAWC,MAAK,WACxBP,QAAQC,IAAI,gEACZN,EAAQa,KAAK,QACZC,OAAM,WACPT,QAAQC,IAAI,gCA6BVS,eAzBiB,SAACC,GACtBX,QAAQC,IAAI,UAAWU,MA0BnB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACEC,UAhCa,SAACC,EAAKC,GAC7B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,4EACxCH,EAAMI,OAAO,GAAKJ,EAAMI,OAAO,GAAWF,QAAQC,OAAO,0EACtDD,QAAQG,cAiCT,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACES,IAAI,EACJT,QAAQ,mCAEV,CACEU,IAAI,GACJV,QAAQ,sCAIZ,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKf,KAAN,CACEC,MAAM,2BACNhB,KAAK,YACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8CA5DG,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAqB,CAC3CX,UAD2C,SACjCC,EAAKC,GACb,OAAIS,EAAc,cAAgBT,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,mDA8DlB,kBAAC,IAAMK,SAAP,OAIF,kBAAC,IAAKf,KAAStB,EACb,kBAAC,IAAD,CAAQuC,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/12.2fea263d.chunk.js","sourcesContent":["import React from 'react'\nimport {observer} from 'mobx-react'\nimport {useStores} from '../stores';\nimport {Form, Input, Button, Checkbox} from 'antd';\nimport styled from 'styled-components';\nimport {useHistory} from 'react-router-dom';\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  margin: 30px auto;\n  box-shadow: 2px 2px 4px 0 rgba(0,0,0,0.2);\n  border-radius: 4px;\n  padding: 20px;\n`;\n\nconst Header = styled.h1`\n  text-align: center;\n  margin-bottom: auto;\n`;\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 20,\n  },\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 11,\n    span: 13,\n  },\n}\n\nconst Component = () => {\n  const {AuthStore} = useStores();\n  const history = useHistory();\n  const onFinish = (values) => {\n    console.log('Success:', values)\n    AuthStore.setUsername(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.register().then(()=>{\n      console.log('注册成功，跳转到首页');\n      history.push('/')\n    }).catch(()=>{\n      console.log('注册失败');\n    })\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  const validateUsername = (rule,value) => {\n    if (/\\W/.test(value)) return Promise.reject('只能是数字、字母和下划线');\n    if (value.length<6 || value.length>10) return Promise.reject('用户名6~10英文或者数字字符');\n    return Promise.resolve();\n  };\n\n  const validateConfirm = ({getFieldValue}) =>({\n    validator(rule,value){\n      if (getFieldValue('password') === value) return Promise.resolve();\n      return Promise.reject('两次密码不一致');\n    }\n  })\n\n  return (\n    <Wrapper>\n      <Header>用户注册</Header>\n      <Form\n        {...layout}\n        name=\"basic\"\n\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: '输入用户名',\n            },\n            {\n              validator: validateUsername,\n            }]\n          }\n        >\n          <Input/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: '请输入密码',\n            },\n            {\n              min:8,\n              message:'密码至少8位',\n            },\n            {\n              max:12,\n              message:'密码至多12位',\n            }\n          ]}\n        >\n          <Input.Password/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"确认密码\"\n          name=\"password1\"\n          rules={[\n            {\n              required: true,\n              message: '请再次输入密码',\n            },\n            validateConfirm\n          ]}\n        >\n          <Input.Password/>\n        </Form.Item>\n\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  )\n}\n\n\nexport default Component"],"sourceRoot":""}